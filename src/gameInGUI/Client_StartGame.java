/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gameInGUI;


import java.awt.Color;
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author rajesh
 */
public class Client_StartGame extends javax.swing.JFrame {

    public boolean flag = true;
    String address = "127.0.0.1";
    int port = 9090;
    static int inpNum = 0;
    static String gamestatus = "";
    public static byte[] message = new byte[4],
            response = new byte[4];

    static DataInputStream inStream;
    static DataOutputStream outStream;
    BufferedReader br;
    static String ClientInput = "", name = "";
    public static boolean loop = true;
    private static boolean started = false;
    private static boolean sendName = false;

    /**
     * Creates new form Client
     */
    public Client_StartGame() {
        initComponents();
        // setExtendedState(MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        msg_area = new javax.swing.JTextArea();
        msg_text = new javax.swing.JTextField();
        msg_send = new javax.swing.JButton();
        start_end_button = new javax.swing.JToggleButton();
        score_button = new javax.swing.JButton();
        score_show = new javax.swing.JLabel();
        exit_button = new javax.swing.JButton();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));

        jLabel1.setText("       Welcome to Guessing game!");

        msg_area.setEditable(false);
        msg_area.setColumns(20);
        msg_area.setFont(new java.awt.Font("PT Serif", 1, 14)); // NOI18N
        msg_area.setRows(5);
        msg_area.setText("*************************************************  \n         Press 'Start Button' To play the Game!\n*************************************************");
        msg_area.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                msg_areaAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(msg_area);

        msg_text.setFont(new java.awt.Font("PT Serif", 0, 15)); // NOI18N

        msg_send.setFont(new java.awt.Font("PT Serif", 1, 15)); // NOI18N
        msg_send.setText("Send");
        msg_send.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        msg_send.setEnabled(false);
        msg_send.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                msg_sendMouseClicked(evt);
            }
        });
        msg_send.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                msg_sendInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        msg_send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msg_sendActionPerformed(evt);
            }
        });
        msg_send.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                msg_sendPropertyChange(evt);
            }
        });

        start_end_button.setBackground(java.awt.Color.green);
        start_end_button.setFont(new java.awt.Font("PT Serif", 1, 15)); // NOI18N
        start_end_button.setText("Start Game");
        start_end_button.setToolTipText("Connect with server");
        start_end_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                start_end_buttonMouseClicked(evt);
            }
        });
        start_end_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                start_end_buttonActionPerformed(evt);
            }
        });

        score_button.setFont(new java.awt.Font("PT Serif", 1, 15)); // NOI18N
        score_button.setText("Score");
        score_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                score_buttonMouseClicked(evt);
            }
        });

        score_show.setText("Score : 0");

        exit_button.setBackground(new java.awt.Color(255, 26, 62));
        exit_button.setFont(new java.awt.Font("PT Serif", 1, 15)); // NOI18N
        exit_button.setText("Exit");
        exit_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exit_buttonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(start_end_button, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(score_button, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(exit_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(score_show, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(msg_text, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(msg_send, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(283, 283, 283)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(start_end_button, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(score_button, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exit_button, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(score_show))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(msg_text, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(msg_send, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 53, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void msg_sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msg_sendActionPerformed
        // TODO add your handling code here:
        //jButton1.setEnabled(false);

    }//GEN-LAST:event_msg_sendActionPerformed

    private void start_end_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_start_end_buttonMouseClicked
        // TODO add your handling code here:     
        if (flag) {

            start_end_button.setText("End Game");
            start_end_button.setToolTipText("End the game!");
            flag = false;
            msg_send.setEnabled(true);
            start_end_button.setBackground(Color.red);
            score_show.setText("Score : 0");

            try {
                //*******connecting with the server...*******
                System.out.println("Connecting to " + address + " on port " + port);
                msg_area.setText("Connecting to " + address + " on port " + port + "\n");

                Socket socket = new Socket(address, port);

                System.out.println("Just Connected to " + socket.getInetAddress());
                msg_area.append("Just Connected to " + socket.getInetAddress() + "\n\n******************************\n\n");
                if (socket.isConnected()) {
                    gamestatus = "1";
//                    inpNum = Integer.parseInt(gamestatus);
//                    message[0] = (byte) inpNum;

                }

                inStream = new DataInputStream(socket.getInputStream());
                outStream = new DataOutputStream(socket.getOutputStream());
                br = new BufferedReader(new InputStreamReader(System.in));
                if (gamestatus == "1") {
                    msg_area.append("Enter the difficulty level (1 to 3)\nLevel-1 : You have to guess Number 1 - 20\nLevel-2 : You have to guess Number 1 - 200\nLevel-3 : You have to guess num 1 - 2000");
                } else {
                    msg_area.setText("Something Went Wrong!");
                }

            } catch (IOException ex) {
                Logger.getLogger(Client_StartGame.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            start_end_button.setText("Start Game");
            start_end_button.setToolTipText("Start the game!");
            flag = true;
            start_end_button.setSelected(false);
            msg_send.setEnabled(false);
            start_end_button.setBackground(Color.green);
            msg_area.setText("*************************************************\n  Press 'Start Button' To play the Game!\n*************************************************\n");
            
        }


    }//GEN-LAST:event_start_end_buttonMouseClicked

    private void msg_sendPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_msg_sendPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_msg_sendPropertyChange

    private void start_end_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_start_end_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_start_end_buttonActionPerformed

    private void msg_areaAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_msg_areaAncestorAdded
        // TODO add your handling code here:
        msg_area.setEditable(false);
    }//GEN-LAST:event_msg_areaAncestorAdded

    private void msg_sendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_msg_sendMouseClicked
        ClientInput = msg_text.getText();
        msg_text.setText("");
        if (ClientInput.length() > 0) {
            if (isInteger(ClientInput) || sendName == true) {
                if (started) {
                    //here client is gussing number...

                    String gusInput = ClientInput;
                    if (sendName == false) {
                        msg_area.append("Guess Number : " + gusInput);
                    }
                    System.out.println("Guess Number : " + gusInput);
                    byte[] GusInput = gusInput.getBytes();
                    SetMsg((byte) 2, (byte) 0, (byte) GusInput.length, (byte) 0);

                    try {
                        outStream.write(message, 0, 3);
                        outStream.write(GusInput);
                    } catch (IOException ex) {
                        Logger.getLogger(Client_StartGame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    //Sending the user's guess number to server.... :)
                    //Sending the user's guess number to server.... :)

                } else {
                    started = true;

                    inpNum = Integer.parseInt(gamestatus);
                    int lev = Integer.parseInt(ClientInput);
                    SetMsg((byte) inpNum, (byte) 0, (byte) 0, (byte) lev);
                    try {
                        outStream.write(message, 0, 4);
                    } catch (IOException ex) {
                        Logger.getLogger(Client_StartGame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

            } else {
                System.out.println("Not the number!\n");
            }
        } else {
            msg_area.append("Something Went Wrong!\n");
        }
        handleResponse(ClientInput);

    }//GEN-LAST:event_msg_sendMouseClicked

    private void exit_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_buttonMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exit_buttonMouseClicked
    private void msg_sendInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_msg_sendInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_msg_sendInputMethodTextChanged

    private void score_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_score_buttonMouseClicked
        SetMsg((byte) 3, (byte) 0, (byte) 0, (byte)0);
        try {
            outStream.write(message, 0, 4);
        } catch (IOException ex) {
            Logger.getLogger(Client_StartGame.class.getName()).log(Level.SEVERE, null, ex);
        }
       handleResponse("");
       started = false;
       sendName = false;
    }//GEN-LAST:event_score_buttonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client_StartGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client_StartGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client_StartGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client_StartGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client_StartGame().setVisible(true);

            }
        });

    }

    public static boolean isInteger(String input) {
        try {
            Integer.parseInt(input);
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    private void SetMsg(byte first, byte second, byte third, byte fourth) {
        message[0] = first;
        message[1] = second;
        message[2] = third;
        message[3] = fourth;
    }

    public void handleResponse(String Input) {
        try {
            inStream.read(response, 0, 3);
            Byte b = new Byte(response[0]);
            int firstResponse = b.intValue();
            switch (firstResponse) {
                case 1:
                    System.out.println("Game Started and Level : " + Input + " Selected!");
                    msg_area.setText("Level " + Input + " Selected!\n");
                    msg_area.append("Please guess the Number ->>\n");
                    break;
                case 2:
                    switch (response[2]) {
                        case 0:
                            System.out.println("\nyour guess is too big! try again.\n");
                            msg_area.append("\nyour guess is too big! try again.\n");
                            msg_area.append("Please guess the Number ->>\n");

                            break;
                        case 1:
                            System.out.println("\nyour guess is too low! try again.\n");

                            msg_area.append("\nyour guess is too low! try again.\n");
                            msg_area.append("Please guess the Number ->>\n");
                            break;
                        case 2:
                            System.out.println("\nPerfect! \nWhat is your name? \nName : ");
                            msg_area.append("\nPerfect! \nWhat is your name? \n");
                            sendName = true;
                            //*********Need to handel this part under the button click*********

                            break;

                        /*The Java byte type is an 8 bit signed integral type with values in the range -128 to +127.
                                The literal 0xff represents +255 which is outside of that range.*/
                        case 127:
                            Byte bNameRes = new Byte(response[1]);
                            int afterGetName = bNameRes.intValue();
                            if (afterGetName == 1) {
                                System.out.println("  ");
                                msg_area.setText("Server Say's: Thanks! " + Input);
                                
                                msg_send.setEnabled(false);
                            }
                            break;
                    }
                    break;

                case 3:
                    System.out.println("{0} " + response[0] + " {1} " + response[1] + " {2} " + response[2]);
                    Byte bHighSc = new Byte(response[2]);
                    int HighScore = bHighSc.intValue();
                    if (HighScore == 0) {
                        System.out.println("\nNo highScore generated!\n");

                        score_show.setText("No Score Generated!!\n");
                    } else {
                        System.out.println("\nyour score is : " + HighScore + " Bravo!!\n");
                        score_show.setText("your score is : " + HighScore + " Bravo!!");
                        
                    }

                    break;
            }
            System.out.println("Response : " + "{0} " + response[0] + " {1} " + response[1] + " {2} " + response[2]);

        } catch (IOException ex) {
            Logger.getLogger(Client_StartGame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton exit_button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTextArea msg_area;
    private static javax.swing.JButton msg_send;
    private static javax.swing.JTextField msg_text;
    private static javax.swing.JButton score_button;
    private static javax.swing.JLabel score_show;
    private static javax.swing.JToggleButton start_end_button;
    // End of variables declaration//GEN-END:variables
}
